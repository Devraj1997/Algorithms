public class KMP {

    public static void main(String[] args) {
        String text = "ABCABCDABABCDABCDABDE";
        String pattern = "ABCDABD";

        int index = search(text, pattern);
        if (index != -1) {
            System.out.println("Pattern found at index " + index);
        } else {
            System.out.println("Pattern not found in the text.");
        }
    }

    public static int search(String text, String pattern) {
        int[] prefixArray = buildPrefixArray(pattern);

        int i = 0; // Index for text
        int j = 0; // Index for pattern

        while (i < text.length()) {
            if (text.charAt(i) == pattern.charAt(j)) {
                i++;
                j++;
                if (j == pattern.length()) {
                    return i - j; // Pattern found
                }
            } else {
                if (j != 0) {
                    j = prefixArray[j - 1];
                } else {
                    i++;
                }
            }
        }
        return -1; // Pattern not found
    }

    public static int[] buildPrefixArray(String pattern) {
        int[] prefixArray = new int[pattern.length()];
        int j = 0;

        for (int i = 1; i < pattern.length(); ) {
            if (pattern.charAt(i) == pattern.charAt(j)) {
                prefixArray[i] = j + 1;
                j++;
                i++;
            } else {
                if (j != 0) {
                    j = prefixArray[j - 1];
                } else {
                    prefixArray[i] = 0;
                    i++;
                }
            }
        }
        return prefixArray;
    }
}
